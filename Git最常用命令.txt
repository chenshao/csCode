【git status】
>git status -s：
显示上次提交之后所更改或者写入索引的改动（绿M：更改已写入索引；红M：更改未写入索引－－可同时出现）

【git diff】－－diff换为difftool，使用外部工具（如BeyondCompare）进行比较
>git diff：
显示副本与索引的差别
>git diff --cached：
显示索引与快照的差别
>git diff head：
显示副本与快照的差别（无视索引）

【git archive】
>git archive -o ../updated.zip HEAD $(git diff --name-only HEAD^)：
导出最后一次提交修改过的文件
>git archive -o ../latest.zip NEW_COMMIT_ID_HERE $(git diff --name-only OLD_COMMIT_ID_HERE NEW_COMMIT_ID_HERE)：
导出两次提交之间修改过的文件

【git commit】
>git commit -a 
自动将在提交前将已记录、修改的文件放入缓存区；不过你仍然需要执行 git add 来添加新文件，就像 Subversion 一样。
>git commit -m '这是提交快照的日志内容'
提交快照，添加日志
>git commit --amend
修改最后一次commit的日志内容
>git rebase -i [commit号(需要修改的那个commit的前一个hash码)]、git commit --amend、git rebase --continue
修改历史commit的日志内容

【git log】
>git log
查看所有commit日志
>git log -p [commit号]
查看某次commit日志

【git reset】
>git reset HEAD [ -- hello.txt]
取消索引（与git add 对应）

【git branch】
*** 新增的文件，必须是commit之后，才算是新分支新增的文件
*** 修改的文件，必须是commit之后，才允许切换至其它分支
>git branch
列出可用的分支
>git branch $branchname
创建新分支$branchname






